name: Build and Publish JetPack Dockerfile

on:
  # Runs workflow 'automatically' when a pull request for the development
  # branch is made and documentaion files have been edited.
  pull_request:
    branches: ['development']
    paths: ['.devcontainer/Dockerfile_Ubuntu']
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  packages: write
  id-token: write

concurrency:
  group: "docker-jetpack"
  cancel-in-progress: false

jobs:
  get-commit-message:
    name: 'Get commit message'
    runs-on: ubuntu-latest
    steps:
      - name: Get commits
        env:
          # github URL to list commits
          COMMITS_URL: ${{ github.event.pull_request.commits_url }}
        run: |
          if [ "${COMMITS_URL}x" != "x" ]; then
            # get commits list and pick up last one by jq
            # caution: only 100 commits will be taken by curl
            # if your PR has more than 100 commits
            # you have to set page query parameter
            # and request last page commits
            # API URL details: https://docs.github.com/en/rest/pulls/pulls?apiVersion=2022-11-28#list-commits-on-a-pull-request
            LAST_MSG=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "${COMMITS_URL}?per_page=100" | jq -r .[-1].commit.message)
            # set environment variable
            echo "LAST_MSG=${LAST_MSG}" >> "${GITHUB_ENV}"
          else
            echo 'LAST_MSG=' >> "${GITHUB_ENV}"
          fi
    outputs: 
      commit-message: ${{ env.LAST_MSG }}

  print-message:
    name: 'Print Last Commit Message'
    needs: get-commit-message
    runs-on: ubuntu-latest
    steps:
      - name: Print Commit Message
        run: |
          echo ${{needs.get-commit-message.outputs.commit-message}}
          echo ${{(needs.get-commit-message.outputs.commit-message == '** Build and Publish JetPack Image **')}}

  build-and-push-docker-image:
    name: Build Docker image and push to repository
    needs: [get-commit-message, print-message]
    runs-on: ubuntu-latest
    if: ${{ (needs.get-commit-message.outputs.commit-message == '** Build and Publish JetPack Image **') || (github.event_name == 'workflow_dispatch') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Get repository owner/repository and convert to lowercase string
        id: repo-name-string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build JetPack Image and push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          file: ".devcontainer/Dockerfile_JetPack"
          tags: "ghcr.io/${{ steps.repo-name-string.outputs.lowercase }}:zed4.0-cuda11.4-opencv4.7.0-jp5.1.1"
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
